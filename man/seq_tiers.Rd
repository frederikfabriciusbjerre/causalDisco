% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knowledge.R
\name{seq_tiers}
\alias{seq_tiers}
\title{Generate a Bundle of Tier–Variable Formulas}
\usage{
seq_tiers(tiers, vars)
}
\arguments{
\item{tiers}{An integer vector of tier indices (each >= 1). These will appear as the
left‐hand sides of the generated formulas.}

\item{vars}{A tidyselect specification (unevaluated) that \emph{must} contain the special
placeholder \code{i}, either as the symbol \code{i} or inside a string
like \code{"…{i}…"}.  For each value of \code{i} in \code{tiers}, that
placeholder will be substituted and the resulting call used as the
right‐hand side of a formula.}
}
\value{
A list of two‐sided formulas, each of class \code{"tier_bundle"}.
You can pass this list directly to \code{tier()} (which will expand it
automatically).
}
\description{
Quickly create a series of two‐sided formulas for use with \code{tier()},
where each formula maps a numeric tier index to a tidyselect specification
that contains the placeholder \code{i}.  The placeholder \code{i} is replaced
by each element of \code{tiers} in turn, allowing you to write a single
template rather than many nearly identical formulas.
}
\examples{
# Suppose your data frame has columns X_1, X_2, X_3, X_4
# Create formulas 1 ~ ends_with("1"), 2 ~ ends_with("2"), etc.
formulas <- seq_tiers(1:4, ends_with("_{i}"))
tier(
  # this expands into 1 ~ ends_with("_1"), 2 ~ ends_with("_2"), …
  formulas
)

# You can also use matches() with a custom pattern
tier(
  seq_tiers(4:9, matches("Var{i}th$"))
)

}
\seealso{
\code{\link{tier}}, for turning these formulas into actual tiers.
}
