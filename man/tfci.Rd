% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tfci.R
\name{tfci}
\alias{tfci}
\title{Perform causal discovery using the temporal FCI algorithm (TFCI)}
\usage{
tfci(
  data = NULL,
  order,
  sparsity = 10^(-1),
  test = regTest,
  suffStat = NULL,
  method = "stable.fast",
  methodNA = "none",
  methodOri = "conservative",
  varnames = NULL,
  ...
)
}
\arguments{
\item{data}{A data frame with the observed variables. Columns are variables.
When using the deprecated \code{order} argument, variables should be
prefixed with their period name (see examples). When using
\code{knowledge}, prefixes are not required.}

\item{order}{A character vector of period prefixes in temporal order.
Deprecated; use \code{knowledge} instead. If supplied, it is converted
internally to tier knowledge using \code{tidyselect::starts_with()} for
each prefix.}

\item{sparsity}{The sparsity level used as the per-test significance
threshold for conditional independence testing.}

\item{test}{A conditional independence test. The default \code{regTest}
uses a regression-based information-loss test. Another available option is
\code{corTest} which tests for vanishing partial correlations. User-supplied
functions may also be used; see details for the required interface.}

\item{suffStat}{A sufficient statistic. If supplied, it is passed directly
to the test and no statistics are computed from \code{data}. Its structure
depends on the chosen \code{test}.}

\item{method}{Skeleton construction method, one of \code{"stable"},
\code{"original"}, or \code{"stable.fast"} (default). See
\code{\link[pcalg]{skeleton}} for details.}

\item{methodNA}{Handling of missing values, one of \code{"none"} (default;
error on any \code{NA}), \code{"cc"} (complete-case analysis), or
\code{"twd"} (test-wise deletion).}

\item{methodOri}{Method for handling conflicting separating sets when orienting
edges, must be one of \code{"standard"}, \code{"conservative"} (the default) or
\code{"maj.rule"}. See \link[pcalg]{pc} for further details.}

\item{varnames}{Character vector of variable names. Only needed when
\code{data} is not supplied and all information is passed via
\code{suffStat}.}

\item{...}{Additional arguments passed to
\code{\link[pcalg]{skeleton}} during skeleton construction.}
}
\value{
The default output is a \code{tpag} object. This is an
S3 object, i.e., a list, with entries: \code{$tamat} (the estimated adjacency
matrix), \code{$order} (character vector with the order, as inputted to
this function), \code{$psi} (the significance level used for testing), and
\code{$ntests} (the number of tests conducted).

The adjacency matrix A has four possible entry values: 0 (no edge), 1 (circle),
2 (arrowhead), 3 (tail). It is encoded as a "to-from" adjacency matrix, which means
that e.g. A(i,j) = 1 places a circle in the directed from j to i. For example, if
A(i,j) = 1 and A(j,i) = 2, we have that i o-> j. Similarly, A(i,j) = 2 and A(j,i) = 3
mean that i <- j. Note that this is a transposed version of the adjacency
matrix outputted for \code{fciAlgo} objects from the \code{pcalg} package, which
is "to-from". But it is consistent with the "from-to" adjacency matrices used
for \code{pcAlgo} objects from the same package.
}
\description{
Use a modification of the FCI algorithm that makes use of background knowledge
in the format of a partial ordering. This may for instance come about when
variables can be assigned to distinct tiers or periods (i.e., a temporal ordering).
}
\details{
The temporal/tiered background information enters several places in the TFCI
algorithm: 1) In the skeleton construction phase, when looking for separating
sets Z between two variables X and Y, Z is not allowed to contain variables that
are strictly after both X and Y in the temporal order. 2) This also applies to
the subsequent phase where the algorithm searches for possible D-SEP sets. 3)
Prior to other orientation steps, any cross-tier edges get an arrowhead placed
at their latest node.

After this, the usual FCI orientation rules are applied, see \link[pcalg]{udag2pag}
for details.
}
\examples{
# simulate linear Gaussian data w unobserved variable L1
set.seed(123)
n <- 100
L1 <- rnorm(n)
X1 <- rnorm(n)
X2 <- L1 + X1 + rnorm(n)
X3 <- X1 + rnorm(n)
X4 <- X3 + L1 + rnorm(n)
d <- data.frame(
  p1_X1 = X1,
  p1_X2 = X2,
  p2_X3 = X3,
  p2_X4 = X4
)

# use tfci algorithm to recover tpag (conservative edge orientation)
tfci(d, test = corTest, order = c("p1", "p2"))

# use tfci with standard (non-conservative) method for edge orientation
tfci(d, test = corTest, order = c("p1", "p2"), methodOri = "standard")

}
\author{
Anne Helby Petersen, Qixiang Chen, and Daniel Malinsky.
}
