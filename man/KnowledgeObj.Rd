% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/knowledge.R
\docType{class}
\name{KnowledgeObj}
\alias{KnowledgeObj}
\title{KnowledgeObj R6 Class – Container for Background Knowledge}
\format{
An \link[R6]{R6Class} generator object.
}
\description{
A lightweight R6 wrapper that stores user‑supplied background knowledge
(tiers of variables, \emph{forbidden} edges and \emph{required} edges) for use by
causal‑discovery algorithms.
}
\details{
A \code{KnowledgeObj} starts empty and is filled incrementally with helper
methods.  All mutators return the object invisibly, so calls may be
chained.  The class is designed to be used indirectly through the
higher‑level \code{\link{knowledge}()} helper, but it can be manipulated
directly if finer control is needed.
}
\examples{
kn_obj <- KnowledgeObj$new()
kn_obj$add_to_tier(1, c("V1", "V2"))$
  add_forbidden("V1", "V3")$
  add_required("V2", "V3")
kn_obj

}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{tiers}}{A named \code{list}.  Each name is a tier number (stored as a character
string) and the value is a character vector of variable names assigned
to that tier.}

\item{\code{forbidden}}{A \code{list}.  Each element is a character vector of length 2
\code{c(source, target)} representing a \strong{forbidden} directed edge.}

\item{\code{required}}{A \code{list}.  Each element is a character vector of length 2
\code{c(source, target)} representing a \strong{required} directed edge
(source → target).}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-KnowledgeObj-new}{\code{KnowledgeObj$new()}}
\item \href{#method-KnowledgeObj-add_to_tier}{\code{KnowledgeObj$add_to_tier()}}
\item \href{#method-KnowledgeObj-add_forbidden}{\code{KnowledgeObj$add_forbidden()}}
\item \href{#method-KnowledgeObj-add_required}{\code{KnowledgeObj$add_required()}}
\item \href{#method-KnowledgeObj-get_tetrad_knowledge}{\code{KnowledgeObj$get_tetrad_knowledge()}}
\item \href{#method-KnowledgeObj-print}{\code{KnowledgeObj$print()}}
\item \href{#method-KnowledgeObj-clone}{\code{KnowledgeObj$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KnowledgeObj-new"></a>}}
\if{latex}{\out{\hypertarget{method-KnowledgeObj-new}{}}}
\subsection{Method \code{new()}}{
Create a new, empty \code{KnowledgeObj}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KnowledgeObj$new()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A new \code{KnowledgeObj} instance.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KnowledgeObj-add_to_tier"></a>}}
\if{latex}{\out{\hypertarget{method-KnowledgeObj-add_to_tier}{}}}
\subsection{Method \code{add_to_tier()}}{
Add one or more variables to a tier. If the tier does not yet exist it
is created; duplicates are removed.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KnowledgeObj$add_to_tier(tier, vars)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{tier}}{\code{integer} | \code{numeric} | \code{character}
Tier number (will be coerced to character).}

\item{\code{vars}}{\code{character}
Vector of variable names to add.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The modified object (invisibly), so the method can be chained.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KnowledgeObj-add_forbidden"></a>}}
\if{latex}{\out{\hypertarget{method-KnowledgeObj-add_forbidden}{}}}
\subsection{Method \code{add_forbidden()}}{
Register a \strong{forbidden} edge \code{source → target}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KnowledgeObj$add_forbidden(source, target)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{source}}{\code{character}
Source variable name.}

\item{\code{target}}{\code{character}
Target variable name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The modified object (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KnowledgeObj-add_required"></a>}}
\if{latex}{\out{\hypertarget{method-KnowledgeObj-add_required}{}}}
\subsection{Method \code{add_required()}}{
Register a \strong{required} edge \code{source → target}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KnowledgeObj$add_required(source, target)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{source}}{\code{character}
Source variable name.}

\item{\code{target}}{\code{character}
Target variable name.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The modified object (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KnowledgeObj-get_tetrad_knowledge"></a>}}
\if{latex}{\out{\hypertarget{method-KnowledgeObj-get_tetrad_knowledge}{}}}
\subsection{Method \code{get_tetrad_knowledge()}}{
Convert the internal R representation to a Java
\code{edu.cmu.tetrad.data.Knowledge} object for use with Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KnowledgeObj$get_tetrad_knowledge()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A Java \code{Knowledge} object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KnowledgeObj-print"></a>}}
\if{latex}{\out{\hypertarget{method-KnowledgeObj-print}{}}}
\subsection{Method \code{print()}}{
Pretty‑print the contents of the object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KnowledgeObj$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Ignored; included for compatibility.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
The object (invisibly).
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-KnowledgeObj-clone"></a>}}
\if{latex}{\out{\hypertarget{method-KnowledgeObj-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{KnowledgeObj$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
