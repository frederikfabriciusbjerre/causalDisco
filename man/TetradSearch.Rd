% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tetrad_search.R
\docType{class}
\name{TetradSearch}
\alias{TetradSearch}
\title{TetradSearch R6 class}
\description{
High-level wrapper around the Java-based \strong{Tetrad} causal-discovery
library.  The class lets you choose independence tests, scores, and search
algorithms from Tetrad, run them on an R data set, and retrieve the
resulting graph or statistics.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{data}}{Java object that stores the (possibly converted) data set
used by Tetrad.}

\item{\code{rdata}}{Original \strong{R} \code{data.frame} supplied by the user.}

\item{\code{score}}{Java object holding the scoring function selected with
\code{set_score()}. Supply one of the method strings for
\code{set_score()}. Recognised values are:

\itemize{
\item \code{"sem_bic"} – SEM BIC score.
\item \code{"ebic"} – Extended BIC score.
\item \code{"bdeu"} – Bayes Dirichlet Equivalent score with uniform priors.
\item \code{"basis_function_bic"} – BIC score for basis-function models. This is a generalization of the Degenerate Gaussian score.
\item \code{"conditional_gaussian"} – Mixed discrete/continuous BIC score.
\item \code{"degenerate_gaussian"} – Degenerate Gaussian BIC score.
\item \code{"discrete_bic"} – BIC score for discrete data.
\item \code{"gic"} – Generalized Information Criterion (GIC) score.
\item \code{"mag_degenerate_gaussian_bic"} – MAG Degenerate Gaussian BIC Score.
\item \code{"mixed_variable_polynomial"} – Mixed variable polynomial BIC score.
\item \code{"poisson_prior"} – Poisson prior score.
\item \code{"zhang_shen_bound"} – Gaussian Extended BIC score.
}}

\item{\code{test}}{Java object holding the independence test selected with
\code{set_test()}. Supply one of the method strings for
\code{set_test()}. Recognised values are:

\itemize{
\item \code{"chi_square"} – chi-squared test
\item \code{"g_square"}   – likelihood-ratio \(G^2\) test
\item \code{"basis_function_lrt"} – basis-function likelihood-ratio
\item \code{"probabilistic"} – Uses BCInference by Cooper and Bui to calculate probabilistic conditional independence judgments.
\item \code{"fisher_z"} – Fisher \(Z\) (partial correlation) test
\item \code{"degenerate_gaussian"} – Degenerate Gaussian test as a likelihood ratio test
\item \code{"cci"} – Conditional independence of variable in a continuous data set using Daudin's method.
\item \code{"conditional_gaussian"} – Mixed discrete/continuous test
\item \code{"kci"} – Kernel Conditional Independence Test (KCI) by Kun Zhang
}}

\item{\code{alg}}{Java object representing the search algorithm.}

\item{\code{mc_test}}{Java independence-test object used by the Markov checker.}

\item{\code{java}}{Java object returned by the search (typically a graph).}

\item{\code{result}}{Convenience alias for \code{java}; may store additional
metadata depending on the search type.}

\item{\code{knowledge}}{Java \code{Knowledge} object carrying background
constraints (required/forbidden edges).}

\item{\code{params}}{Java \code{Parameters} object holding algorithm settings.}

\item{\code{bootstrap_graphs}}{Java \code{List} of graphs produced by bootstrap
resampling, if that feature was requested.}

\item{\code{mc_ind_results}}{Java \code{List} with Markov-checker test results.}

\item{\code{bhat}}{Java object containing the \eqn{\hat B} adjacency matrix
(returned by some Tetrad algorithms).}

\item{\code{unstable_bhats}}{Collection of unstable \eqn{\hat B} matrices.}

\item{\code{stable_bhats}}{Collection of stable \eqn{\hat B} matrices.}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TetradSearch-new}{\code{TetradSearch$new()}}
\item \href{#method-TetradSearch-set_test}{\code{TetradSearch$set_test()}}
\item \href{#method-TetradSearch-set_score}{\code{TetradSearch$set_score()}}
\item \href{#method-TetradSearch-set_alg}{\code{TetradSearch$set_alg()}}
\item \href{#method-TetradSearch-set_knowledge}{\code{TetradSearch$set_knowledge()}}
\item \href{#method-TetradSearch-set_params}{\code{TetradSearch$set_params()}}
\item \href{#method-TetradSearch-get_parameters_for_function}{\code{TetradSearch$get_parameters_for_function()}}
\item \href{#method-TetradSearch-run_search}{\code{TetradSearch$run_search()}}
\item \href{#method-TetradSearch-set_bootstrapping}{\code{TetradSearch$set_bootstrapping()}}
\item \href{#method-TetradSearch-set_data}{\code{TetradSearch$set_data()}}
\item \href{#method-TetradSearch-set_verbose}{\code{TetradSearch$set_verbose()}}
\item \href{#method-TetradSearch-set_time_lag}{\code{TetradSearch$set_time_lag()}}
\item \href{#method-TetradSearch-get_data}{\code{TetradSearch$get_data()}}
\item \href{#method-TetradSearch-get_knowledge}{\code{TetradSearch$get_knowledge()}}
\item \href{#method-TetradSearch-get_java}{\code{TetradSearch$get_java()}}
\item \href{#method-TetradSearch-get_string}{\code{TetradSearch$get_string()}}
\item \href{#method-TetradSearch-get_dot}{\code{TetradSearch$get_dot()}}
\item \href{#method-TetradSearch-get_amat}{\code{TetradSearch$get_amat()}}
\item \href{#method-TetradSearch-clone}{\code{TetradSearch$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-new"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-new}{}}}
\subsection{Method \code{new()}}{
Initializes the \code{TetradSearch} object, creating new Java objects for
\code{knowledge} and \code{params}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_test"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_test}{}}}
\subsection{Method \code{set_test()}}{
Sets the independence test to use in Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_test(method, ..., mc = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{method}}{(character) Name of the test method (e.g., "chi_square", "fisher_z").}

\item{\code{...}}{Additional arguments passed to the private test-setting methods.}

\item{\code{mc}}{(logical) If TRUE, sets this test for the Markov checker \code{mc_test}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}, for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_score"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_score}{}}}
\subsection{Method \code{set_score()}}{
Sets the scoring function to use in Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_score(method, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{method}}{(character) Name of the score (e.g., "sem_bic", "ebic", "bdeu").
\itemize{
\item \code{"sem_bic"} – SEM BIC score.
\item \code{"ebic"} – Extended BIC score.
\item \code{"bdeu"} – Bayes Dirichlet Equivalent score with uniform priors.
\item \code{"basis_function_bic"} – BIC score for basis-function models. This is a generalization of the Degenerate Gaussian score.
\item \code{"conditional_gaussian"} – Mixed discrete/continuous BIC score.
\item \code{"degenerate_gaussian"} – Degenerate Gaussian BIC score.
\item \code{"discrete_bic"} – BIC score for discrete data.
\item \code{"gic"} – Generalized Information Criterion (GIC) score.
\item \code{"mag_degenerate_gaussian_bic"} – MAG Degenerate Gaussian BIC Score.
\item \code{"mixed_variable_polynomial"} – Mixed variable polynomial BIC score.
\item \code{"poisson_prior"} – Poisson prior score.
\item \code{"zhang_shen_bound"} – Gaussian Extended BIC score.
}}

\item{\code{...}}{Additional arguments passed to the private score-setting methods.
For the following scores, the following parameters are available:
\itemize{
\item \code{sem_bic} – SEM BIC score.
\itemize{
\item \code{penalty_discount = 2} – Penalty discount factor used in
BIC = 2L - ck log N, where c is the penalty. Higher c yield sparser
graphs,
\item \code{structure_prior = 0} – The default number of parents
for any conditional probability table. Higher weight is accorded
to tables with about that number of parents. The prior structure
weights are distributed according to a binomial distribution,
\item \code{sem_bic_rule = 1} – The Chickering Rule uses the
difference of BIC scores to add or remove edges. The Nandy et al.
rule uses a single calculation of a partial correlation in place
of the likelihood difference,
\item \code{precompute_covariances = TRUE} – For more than 5000
variables or so, set this to FALSE in order to calculate
covariances on the fly from data,
\item \code{singularity_lambda = 0.0} – Small number >= 0: Add
lambda to the the diagonal, < 0 Pseudoinverse
}
\item \code{ebic} – Extended BIC score.
\itemize{
\item \code{gamma} – The gamma parameter in the EBIC score.
\item \code{precompute_covariances = TRUE} – For more than 5000
variables or so, set this to FALSE in order to calculate
covariances on the fly from data,
\item \code{singularity_lambda = 0.0} – Small number >= 0: Add
lambda to the the diagonal, < 0 Pseudoinverse.
}
\item \code{bdeu} – Bayes Dirichlet Equivalent score with uniform priors.
\itemize{
\item \code{sample_prior = 10} – This sets the prior equivalent
sample size. This number is added to the sample size for each
conditional probability table in the model and is divided equally
among the cells in the table,
\item \code{singularity_lambda = 0.0} – Small number >= 0: Add
lambda to the the diagonal, < 0 Pseudoinverse.
}
\item \code{basis_function_bic} – BIC score for basis-function models. This is a generalization of the Degenerate Gaussian score.
\itemize{
\item \code{truncation_limit = 3} – Basis functions 1 though this
number will be used. The Degenerate Gaussian category indicator
variables for mixed data are also used,
\item \code{penalty_discount = 2} – Penalty discount. Higher penalty
yields sparser graphs,
\item \code{singularity_lambda = 0.0} – Small number >= 0: Add
lambda to the the diagonal, < 0 Pseudoinverse,
\item \code{do_one_equation_only = FALSE} – If TRUE, only one
equation should be used when expanding the basis.
}
\item \code{conditional_gaussian} – Mixed discrete/continuous BIC score.
\itemize{
\item \code{penalty_discount = 1} – Penalty discount. Higher penalty
yields sparser graphs,
\item \code{discretize = TRUE} – If TRUE for the conditional
Gaussian likelihood, when scoring X->D where X is continuous and D
discrete, one should to simply discretize X for just those cases.
If FALSE, the integration will be exact,
\item \code{num_categories_to_discretize = 3} –  In case the exact
algorithm is not used for discrete children and continuous parents
is not used, this parameter gives the number of categories to use
for this second (discretize) backup copy of the continuous
variables,
\item \code{structure_prior = 0} – The default number of parents
for any conditional probability table. Higher weight is accorded
to tables with about that number of parents. The prior structure
weights are distributed according to a binomial distribution.
}
\item \code{"degenerate_gaussian"} – Degenerate Gaussian BIC score.
\itemize{
\item \code{penalty_discount = 1} – Penalty discount. Higher penalty
yields sparser graphs,
\item \code{structure_prior = 0} – The default number of parents
for any conditional probability table. Higher weight is accorded
to tables with about that number of parents. The prior structure
weights are distributed according to a binomial distribution,
\item \code{singularity_lambda = 0.0} – Small number >= 0: Add
lambda to the the diagonal, < 0 Pseudoinverse.
\item \code{precompute_covariances = TRUE} – For more than 5000
variables or so, set this to FALSE in order to calculate
covariances on the fly from data.
}
\item \code{"discrete_bic"} – BIC score for discrete data.
\itemize{
'item \code{penalty_discount = 2} – Penalty discount. Higher penalty
yields sparser graphs,
\item \code{structure_prior = 0} – The default number of parents
for any conditional probability table. Higher weight is accorded
to tables with about that number of parents. The prior structure
weights are distributed according to a binomial distribution.
}
\item \code{"gic"} – Generalized Information Criterion (GIC) score.
\itemize{
\item \code{penalty_discount = 1} – Penalty discount. Higher penalty
yields sparser graphs,
\item \code{sem_gic_rule = "bic"} – The following rules are available:
\itemize{
\item \code{"bic"} –  ln n,
\item \code{"gic2"} – pn^1/3,
\item \code{"ric"} –  2 ln pn,
\item \code{"ricc"} – 2(ln pn + ln ln pn),
\item \code{"gic5"} – ln ln n ln pn,
\item \code{"gic6"} – ln n ln pn
},
\item \code{precompute_covariances = TRUE} – For more than 5000
variables or so, set this to FALSE in order to calculate
covariances on the fly from data,
\item \code{singularity_lambda = 0.0} – Small number >= 0: Add
lambda to the the diagonal, < 0 Pseudoinverse.
}
\item \code{"mag_degenerate_gaussian_bic"} – MAG Degenerate Gaussian BIC Score.
\itemize{
\item \code{penalty_discount = 1} – Penalty discount. Higher penalty
yields sparser graphs,
\item \code{structure_prior = 0} – The default number of parents
for any conditional probability table. Higher weight is accorded
to tables with about that number of parents. The prior structure
weights are distributed according to a binomial distribution,
\item \code{precompute_covariances = TRUE} – For more than 5000
variables or so, set this to FALSE in order to calculate
covariances on the fly from data.
}
\item \code{"mixed_variable_polynomial"} – Mixed variable polynomial BIC score.
\itemize{
\item \code{structure_prior = 0} – The default number of parents
for any conditional probability table. Higher weight is accorded
to tables with about that number of parents. The prior structure
weights are distributed according to a binomial distribution,
\item \code{f_degree = 0} – The f degree.
\item \code{discretize = FALSE} – If TRUE for the conditional
Gaussian likelihood, when scoring X->D where X is continuous and D
discrete, one should to simply discretize X for just those cases.
If FALSE, the integration will be exact.
}
\item \code{"poisson_prior"} – Poisson prior score.
\itemize{
\item \code{poission_lambda = 2} – Lambda parameter for the Poisson
distribution (> 0),
\item \code{precompute_covariances = TRUE} – For more than 5000
variables or so, set this to FALSE in order to calculate
covariances on the fly from data,
\item \code{singularity_lambda = 0.0} – Small number >= 0: Add
lambda to the the diagonal, < 0 Pseudoinverse.
}
\item \code{"zhang_shen_bound"} – Gaussian Extended BIC score.
\itemize{
\item \code{risk_bound = 0.2} – This is the probability of getting
the true model if a correct model is discovered. Could underfit.
\item \code{precompute_covariances = TRUE} – For more than 5000
variables or so, set this to FALSE in order to calculate
covariances on the fly from data,
\item \code{singularity_lambda = 0.0} – Small number >= 0: Add
lambda to the the diagonal, < 0 Pseudoinverse.
}
}}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_alg"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_alg}{}}}
\subsection{Method \code{set_alg()}}{
Sets the causal discovery algorithm to use in Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_alg(method, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{method}}{(character) Name of the algorithm (e.g., "fges", "pc", "fci", etc.).}

\item{\code{...}}{Additional parameters passed to the private algorithm-setting methods.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_knowledge"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_knowledge}{}}}
\subsection{Method \code{set_knowledge()}}{
Sets the background knowledge object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_knowledge(knowledge_obj)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{knowledge_obj}}{An object containing Tetrad knowledge (must implement \code{get_tetrad_knowledge}).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_params"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_params}{}}}
\subsection{Method \code{set_params()}}{
Sets parameters for the Tetrad search.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_params(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Named arguments for the parameters to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_parameters_for_function"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_parameters_for_function}{}}}
\subsection{Method \code{get_parameters_for_function()}}{
Retrieves the argument names of a matching private function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_parameters_for_function(
  fn_pattern,
  score = FALSE,
  test = FALSE,
  alg = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fn_pattern}}{(character) A pattern that should match a private method name.}

\item{\code{score}}{(logical) If TRUE, retrieves parameters for a scoring function.}

\item{\code{test}}{(logical) If TRUE, retrieves parameters for a test function.}

\item{\code{alg}}{(logical) If TRUE, retrieves parameters for an algorithm.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(character) The names of the parameters.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-run_search"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-run_search}{}}}
\subsection{Method \code{run_search()}}{
Runs the chosen Tetrad algorithm on the data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$run_search(
  data = NULL,
  bootstrap = FALSE,
  bhat = FALSE,
  unstable_bhat = FALSE,
  stable_bhat = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{(optional) If provided, overrides the previously set data.}

\item{\code{bootstrap}}{(logical) If TRUE, bootstrapped graphs will be generated.}

\item{\code{bhat}}{(logical) If TRUE, retrieve the BHat adjacency matrix.}

\item{\code{unstable_bhat}}{(logical) If TRUE, retrieve unstable BHats.}

\item{\code{stable_bhat}}{(logical) If TRUE, retrieve stable BHats.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing, but populates \code{self$java} with the resulting graph.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_bootstrapping"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_bootstrapping}{}}}
\subsection{Method \code{set_bootstrapping()}}{
Configures bootstrapping parameters for the Tetrad search.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_bootstrapping(
  number_resampling = 0,
  percent_resample_size = 100,
  add_original = TRUE,
  with_replacement = TRUE,
  resampling_ensemble = 1,
  seed = -1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{number_resampling}}{(integer) Number of bootstrap samples.}

\item{\code{percent_resample_size}}{(numeric) Percentage of sample size for each bootstrap.}

\item{\code{add_original}}{(logical) If TRUE, add the original dataset to the bootstrap set.}

\item{\code{with_replacement}}{(logical) If TRUE, sampling is done with replacement.}

\item{\code{resampling_ensemble}}{(integer) How the resamples are used or aggregated.}

\item{\code{seed}}{(integer) Random seed, or -1 for none.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_data"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_data}{}}}
\subsection{Method \code{set_data()}}{
Sets or overrides the data used by Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_data(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{(data.frame) The new data to load.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_verbose"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_verbose}{}}}
\subsection{Method \code{set_verbose()}}{
Toggles the verbosity in Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_verbose(verbose)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{(logical) TRUE to enable verbose logging, FALSE otherwise.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_time_lag"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_time_lag}{}}}
\subsection{Method \code{set_time_lag()}}{
Sets an integer time lag for time-series algorithms.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_time_lag(time_lag = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{time_lag}}{(integer) The time lag to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_data"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_data}{}}}
\subsection{Method \code{get_data()}}{
Retrieves the current Java data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(Java object) Tetrad dataset.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_knowledge"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_knowledge}{}}}
\subsection{Method \code{get_knowledge()}}{
Returns the background knowledge object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_knowledge()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(Java object) Tetrad Knowledge.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_java"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_java}{}}}
\subsection{Method \code{get_java()}}{
Gets the main Java result object (usually a graph) from the last search.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_java()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(Java object) The Tetrad result graph or model.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_string"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_string}{}}}
\subsection{Method \code{get_string()}}{
Returns the string representation of a given Java object or \code{self$java}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_string(java_obj = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{java_obj}}{(Java object, optional) If NULL, uses \code{self$java}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(character) The \code{toString()} of that Java object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_dot"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_dot}{}}}
\subsection{Method \code{get_dot()}}{
Produces a DOT (Graphviz) representation of the graph.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_dot(java_obj = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{java_obj}}{(Java object, optional) If NULL, uses \code{self$java}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(character) The DOT-format string.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_amat"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_amat}{}}}
\subsection{Method \code{get_amat()}}{
Produces an amat representation of the graph.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_amat(java_obj = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{java_obj}}{(Java object, optional) If NULL, uses \code{self$java}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(character) The DOT-format string.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
