% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tetrad_search.R
\docType{class}
\name{TetradSearch}
\alias{TetradSearch}
\title{TetradSearch R6 Class}
\description{
The \code{TetradSearch} R6 class provides a high-level interface to the Tetrad
Java library. It allows users to set up different independence tests and
scoring functions, specify causal search algorithms, and run them on data.
}
\section{Fields}{

\describe{
\item{\code{data}}{(Java object) The Java object representing the loaded data.}
\item{\code{rdata}}{(data.frame) The original R data passed to the class.}
\item{\code{score}}{(Java object) The scoring function object.}
\item{\code{test}}{(Java object) The independence test object.}
\item{\code{alg}}{(Java object) The causal discovery algorithm object.}
\item{\code{mc_test}}{(Java object) The independence test object used for Markov checker.}
\item{\code{java}}{(Java object) The resulting graph or model object after running a search.}
\item{\code{knowledge}}{(Java object) The Tetrad \code{Knowledge} object storing background knowledge.}
\item{\code{params}}{(Java object) The Tetrad \code{Parameters} object with various configuration settings.}
\item{\code{bootstrap_graphs}}{(Java List) A list of bootstrapped graphs produced by Tetrad.}
\item{\code{mc_ind_results}}{(Java List) A list of results for independence tests from Markov checking.}
\item{\code{bhat}}{(Java object) BHat adjacency matrix from the Tetrad search, if requested.}
\item{\code{unstable_bhats}}{(Java object) A collection of BHat matrices from the Tetrad search, if requested.}
\item{\code{stable_bhats}}{(Java object) A collection of BHat matrices from the Tetrad search, if requested.}
}
}

\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-TetradSearch-new}{\code{TetradSearch$new()}}
\item \href{#method-TetradSearch-set_test}{\code{TetradSearch$set_test()}}
\item \href{#method-TetradSearch-set_score}{\code{TetradSearch$set_score()}}
\item \href{#method-TetradSearch-set_alg}{\code{TetradSearch$set_alg()}}
\item \href{#method-TetradSearch-set_knowledge}{\code{TetradSearch$set_knowledge()}}
\item \href{#method-TetradSearch-set_params}{\code{TetradSearch$set_params()}}
\item \href{#method-TetradSearch-get_parameters_for_function}{\code{TetradSearch$get_parameters_for_function()}}
\item \href{#method-TetradSearch-run_search}{\code{TetradSearch$run_search()}}
\item \href{#method-TetradSearch-set_bootstrapping}{\code{TetradSearch$set_bootstrapping()}}
\item \href{#method-TetradSearch-set_data}{\code{TetradSearch$set_data()}}
\item \href{#method-TetradSearch-set_verbose}{\code{TetradSearch$set_verbose()}}
\item \href{#method-TetradSearch-set_time_lag}{\code{TetradSearch$set_time_lag()}}
\item \href{#method-TetradSearch-get_data}{\code{TetradSearch$get_data()}}
\item \href{#method-TetradSearch-get_knowledge}{\code{TetradSearch$get_knowledge()}}
\item \href{#method-TetradSearch-get_java}{\code{TetradSearch$get_java()}}
\item \href{#method-TetradSearch-get_string}{\code{TetradSearch$get_string()}}
\item \href{#method-TetradSearch-get_dot}{\code{TetradSearch$get_dot()}}
\item \href{#method-TetradSearch-get_amat}{\code{TetradSearch$get_amat()}}
\item \href{#method-TetradSearch-clone}{\code{TetradSearch$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-new"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-new}{}}}
\subsection{Method \code{new()}}{
Initializes the \code{TetradSearch} object, creating new Java objects for
\code{knowledge} and \code{params}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$new()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_test"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_test}{}}}
\subsection{Method \code{set_test()}}{
Sets the independence test to use in Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_test(method, ..., mc = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{method}}{(character) Name of the test method (e.g., "chi_square", "fisher_z").}

\item{\code{...}}{Additional arguments passed to the private test-setting methods.}

\item{\code{mc}}{(logical) If TRUE, sets this test for the Markov checker \code{mc_test}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}, for chaining.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_score"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_score}{}}}
\subsection{Method \code{set_score()}}{
Sets the scoring function to use in Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_score(method, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{method}}{(character) Name of the score (e.g., "sem_bic", "ebic", "bdeu").}

\item{\code{...}}{Additional arguments passed to the private score-setting methods.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_alg"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_alg}{}}}
\subsection{Method \code{set_alg()}}{
Sets the causal discovery algorithm to use in Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_alg(method, ...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{method}}{(character) Name of the algorithm (e.g., "fges", "pc", "fci", etc.).}

\item{\code{...}}{Additional parameters passed to the private algorithm-setting methods.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns \code{self}.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_knowledge"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_knowledge}{}}}
\subsection{Method \code{set_knowledge()}}{
Sets the background knowledge object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_knowledge(knowledge_obj)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{knowledge_obj}}{An object containing Tetrad knowledge (must implement \code{get_tetrad_knowledge}).}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_params"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_params}{}}}
\subsection{Method \code{set_params()}}{
Sets parameters for the Tetrad search.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_params(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{Named arguments for the parameters to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_parameters_for_function"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_parameters_for_function}{}}}
\subsection{Method \code{get_parameters_for_function()}}{
Retrieves the argument names of a matching private function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_parameters_for_function(
  fn_pattern,
  score = FALSE,
  test = FALSE,
  alg = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{fn_pattern}}{(character) A pattern that should match a private method name.}

\item{\code{score}}{(logical) If TRUE, retrieves parameters for a scoring function.}

\item{\code{test}}{(logical) If TRUE, retrieves parameters for a test function.}

\item{\code{alg}}{(logical) If TRUE, retrieves parameters for an algorithm.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(character) The names of the parameters.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-run_search"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-run_search}{}}}
\subsection{Method \code{run_search()}}{
Runs the chosen Tetrad algorithm on the data.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$run_search(
  data = NULL,
  bootstrap = FALSE,
  bhat = FALSE,
  unstable_bhat = FALSE,
  stable_bhat = FALSE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{(optional) If provided, overrides the previously set data.}

\item{\code{bootstrap}}{(logical) If TRUE, bootstrapped graphs will be generated.}

\item{\code{bhat}}{(logical) If TRUE, retrieve the BHat adjacency matrix.}

\item{\code{unstable_bhat}}{(logical) If TRUE, retrieve unstable BHats.}

\item{\code{stable_bhat}}{(logical) If TRUE, retrieve stable BHats.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Nothing, but populates \code{self$java} with the resulting graph.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_bootstrapping"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_bootstrapping}{}}}
\subsection{Method \code{set_bootstrapping()}}{
Configures bootstrapping parameters for the Tetrad search.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_bootstrapping(
  number_resampling = 0,
  percent_resample_size = 100,
  add_original = TRUE,
  with_replacement = TRUE,
  resampling_ensemble = 1,
  seed = -1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{number_resampling}}{(integer) Number of bootstrap samples.}

\item{\code{percent_resample_size}}{(numeric) Percentage of sample size for each bootstrap.}

\item{\code{add_original}}{(logical) If TRUE, add the original dataset to the bootstrap set.}

\item{\code{with_replacement}}{(logical) If TRUE, sampling is done with replacement.}

\item{\code{resampling_ensemble}}{(integer) How the resamples are used or aggregated.}

\item{\code{seed}}{(integer) Random seed, or -1 for none.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_data"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_data}{}}}
\subsection{Method \code{set_data()}}{
Sets or overrides the data used by Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_data(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{(data.frame) The new data to load.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_verbose"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_verbose}{}}}
\subsection{Method \code{set_verbose()}}{
Toggles the verbosity in Tetrad.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_verbose(verbose)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{verbose}}{(logical) TRUE to enable verbose logging, FALSE otherwise.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-set_time_lag"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-set_time_lag}{}}}
\subsection{Method \code{set_time_lag()}}{
Sets an integer time lag for time-series algorithms.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$set_time_lag(time_lag = 0)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{time_lag}}{(integer) The time lag to set.}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_data"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_data}{}}}
\subsection{Method \code{get_data()}}{
Retrieves the current Java data object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_data()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(Java object) Tetrad dataset.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_knowledge"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_knowledge}{}}}
\subsection{Method \code{get_knowledge()}}{
Returns the background knowledge object.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_knowledge()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(Java object) Tetrad Knowledge.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_java"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_java}{}}}
\subsection{Method \code{get_java()}}{
Gets the main Java result object (usually a graph) from the last search.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_java()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
(Java object) The Tetrad result graph or model.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_string"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_string}{}}}
\subsection{Method \code{get_string()}}{
Returns the string representation of a given Java object or \code{self$java}.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_string(java_obj = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{java_obj}}{(Java object, optional) If NULL, uses \code{self$java}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(character) The \code{toString()} of that Java object.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_dot"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_dot}{}}}
\subsection{Method \code{get_dot()}}{
Produces a DOT (Graphviz) representation of the graph.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_dot(java_obj = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{java_obj}}{(Java object, optional) If NULL, uses \code{self$java}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(character) The DOT-format string.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-get_amat"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-get_amat}{}}}
\subsection{Method \code{get_amat()}}{
Produces a DOT (Graphviz) representation of the graph.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$get_amat(java_obj = NULL)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{java_obj}}{(Java object, optional) If NULL, uses \code{self$java}.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
(character) The DOT-format string.
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-TetradSearch-clone"></a>}}
\if{latex}{\out{\hypertarget{method-TetradSearch-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{TetradSearch$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
